<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>wangka</title>
      <link href="/2020/04/10/wangka/"/>
      <url>/2020/04/10/wangka/</url>
      
        <content type="html"><![CDATA[<h2 id="针对-Broadcom-NetLink-TM-Gigabit-Ethernet-网卡经常性断网终极解决方案"><a href="#针对-Broadcom-NetLink-TM-Gigabit-Ethernet-网卡经常性断网终极解决方案" class="headerlink" title="针对 Broadcom NetLink (TM) Gigabit Ethernet 网卡经常性断网终极解决方案"></a>针对 Broadcom NetLink (TM) Gigabit Ethernet 网卡经常性断网终极解决方案</h2><p>相信很多人都会遇到升级到 win10 后经常性断网，时不时就遇见感叹号，头痛的问题，今天把我的解决方案分享出来，希望对同样是宏碁笔记本的兄地有用。</p><p>首先我们去到 Broadcom 官网【<a href="http://www.broadcom.com】，然后如下图一样搜索，下载对应网卡，我是64位所以下载" target="_blank" rel="noopener">www.broadcom.com】，然后如下图一样搜索，下载对应网卡，我是64位所以下载</a> x64。</p><p><img src="https://imgkr.cn-bj.ufileos.com/6890f404-7436-4633-aa81-16b6eca51e67.png" alt=""></p><p>下载完成解压放一边就好了。</p><p>然后，进入到设备管理器，Broadcom NetLink (TM) Gigabit Ethernet 右键点击属性。</p><p><img src="https://imgkr.cn-bj.ufileos.com/d9c99735-86c1-405e-bba6-0cbfca6861d9.png" alt=""></p><p>进入到属性窗口。</p><p><img src="https://imgkr.cn-bj.ufileos.com/9d660dfe-8604-4a3e-9374-43e03308e71e.png" alt=""></p><p>查看版本信息，如果和我一样，这个方法应该对您有用。</p><p><img src="https://imgkr.cn-bj.ufileos.com/26d15410-6402-4cf2-b050-a0626626bb30.png" alt=""></p><p>接下来就是安装更新我们刚刚下载好的网卡驱动了，一步步跟着操作就行。</p><p><img src="https://imgkr.cn-bj.ufileos.com/cce3b894-43cb-4547-b3f5-4ccdd10b7515.png" alt="step 1"></p><p><img src="https://imgkr.cn-bj.ufileos.com/17e223e2-4219-45fb-855c-07b4d6ff9c39.png" alt="step 2"></p><p><img src="https://imgkr.cn-bj.ufileos.com/95c3ec38-a778-444b-bc30-7e2762131712.png" alt="step 3"></p><p><img src="https://imgkr.cn-bj.ufileos.com/f058b628-f308-4a81-9c8e-cff6c714f776.png" alt="step 4"></p><p><img src="https://imgkr.cn-bj.ufileos.com/6c2c66a3-6f2b-430a-af1b-a80889f5428e.png" alt="step 5"></p><p><img src="https://imgkr.cn-bj.ufileos.com/7cf4ab6b-1ed0-409d-ac4e-e5b3de989b26.png" alt="step 6"></p><p><img src="https://imgkr.cn-bj.ufileos.com/87ba8e17-a4d2-4415-b2e9-efe892a65c7f.png" alt="step 7"></p><p>可以看到，已经成功更新了驱动程序，然后进入到驱动程序，可以看到版本已经是 <strong>17.2.0.2</strong> 了。</p><p><img src="https://imgkr.cn-bj.ufileos.com/66154771-11a4-4add-9897-307d382492e3.png" alt=""></p><p><strong>注意，需要重启笔记本才能生效！！</strong></p><p>最后，我们需要修改一下设备安装的默认选项，不然下次 win10 更新您还是可能会遇到同样的问题。</p><p><img src="https://imgkr.cn-bj.ufileos.com/f880ed48-d975-4217-904c-cfb6b195d50c.png" alt="step 1"></p><p><img src="https://imgkr.cn-bj.ufileos.com/3b0fbf08-f70f-4ec7-8be4-03738a52f82e.png" alt="step 2"></p><p>接下来就可以愉快的玩耍了！！！</p><h2 id="Broadcom网卡服务器或主机本地连接网卡参数优化"><a href="#Broadcom网卡服务器或主机本地连接网卡参数优化" class="headerlink" title="Broadcom网卡服务器或主机本地连接网卡参数优化"></a>Broadcom网卡服务器或主机本地连接网卡参数优化</h2><table><thead><tr><th>802.3.az EEE</th><th>Disabled</th></tr></thead><tbody><tr><td>ARP Offload</td><td>Disabled</td></tr><tr><td>Ethernet@WireSpeed</td><td>Disabled</td></tr><tr><td>Flow Control</td><td>Disabled</td></tr><tr><td>Jumbo Mtu</td><td>1500</td></tr><tr><td>Large Send Offload v2 (ipV4)</td><td>Disabled</td></tr><tr><td>Large Send Offload v2 (ipV6)</td><td>Disabled</td></tr><tr><td>Maximum Number of RSS Queue</td><td>RSS 1 Queue</td></tr><tr><td>Priority &amp; VLAN</td><td>Priority Enabled</td></tr><tr><td>LinkSpeed/Duplex</td><td>100Mbps Full Duplex</td></tr><tr><td>TCP/UDP Checksum Offload</td><td>Disabled</td></tr><tr><td>Wake on Magic packet</td><td>Disabled</td></tr><tr><td>Wake on pattern Disabled</td><td>Disabled</td></tr><tr><td>WakeOnLAN From PowerOff Disabled</td><td>Disabled</td></tr><tr><td>WOL Speed</td><td>100Mb</td></tr></tbody></table><h2 id="严格声明"><a href="#严格声明" class="headerlink" title="严格声明"></a>严格声明</h2><p><strong>本项目涉及的代码及一系列分析过程，仅用于学习交流，切勿用于任何非法用途，后果自当。</strong></p><p><strong>未经本人同意，禁止以任何形式，在任何渠道，私自转发或盗文</strong></p><hr><p><strong><span style="color:#35b378;font-weight:bold;">若你是无耻之人，也请带上小弟的文章出处链接地址，抱拳抱拳！！！</span></strong></p><blockquote><p><strong>若要转载请注明出处，尊重他人劳动成果。</strong></p></blockquote><p><strong><span style="color:orangered;font-weight:bold;">转载请注明出处链接 </span>: <span style="color:#0e88eb;font-weight:bold;"><a href="https://hongxin.online/" target="_blank" rel="noopener">https://hongxin.online/</a></span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
          <category> win10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> win 10 断网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github Pages访问太慢？通过Netlify免费加速</title>
      <link href="/2018/09/05/hexo-blog-fast/"/>
      <url>/2018/09/05/hexo-blog-fast/</url>
      
        <content type="html"><![CDATA[<p>参考这篇文章：<a href="https://www.cnblogs.com/37Y37/p/12551839.html" target="_blank" rel="noopener">https://www.cnblogs.com/37Y37/p/12551839.html</a></p><p><strong>需要注意的是，要修改dns服务器</strong></p><p><img src="https://imgkr.cn-bj.ufileos.com/5661e7b8-5e9d-472a-932b-700e8105e430.png" alt=""></p><h2 id="严格声明"><a href="#严格声明" class="headerlink" title="严格声明"></a>严格声明</h2><ul><li><p><strong>本项目涉及的代码及一系列分析过程，仅用于学习交流，切勿用于任何非法用途，后果自当。</strong></p></li><li><p><strong>未经本人同意，禁止以任何形式，在任何渠道，私自转发或盗文</strong></p></li></ul><hr><p><strong><span style="color:#35b378;font-weight:bold;">若你是无耻之人，也请带上小弟的文章出处链接地址，抱拳抱拳！！！</span></strong></p><blockquote><p><strong>若要转载请注明出处，尊重他人劳动成果。</strong></p></blockquote><p><strong><span style="color:orangered;font-weight:bold;">转载请注明出处链接 </span>: <span style="color:#0e88eb;font-weight:bold;"><a href="https://hongxin.online" target="_blank" rel="noopener">https://hongxin.online</a></span></strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo-blog 基于 Gitee 搭建的博客</title>
      <link href="/2018/08/17/hexo-blog/"/>
      <url>/2018/08/17/hexo-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><ul><li>Git</li><li>Node.js <ul><li><strong><span style="color:#35b378;font-weight:bold;">最新的 Node.js 已经集成了 npm</span></strong></li></ul></li><li>npm</li></ul><blockquote><p><strong>官网地址：</strong></p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li><li><a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></li></ul></blockquote><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><h3 id="1-安装-Hexo"><a href="#1-安装-Hexo" class="headerlink" title="1. 安装 Hexo"></a>1. 安装 Hexo</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">npm</span> <span class="selector-tag">install</span> <span class="selector-tag">-g</span> <span class="selector-tag">hexo</span> # 通过<span class="selector-tag">npm</span>安装<span class="selector-tag">hexo</span></span><br><span class="line"># <span class="selector-tag">-g</span> 指定全局安装，可以使用<span class="selector-tag">hexo</span>命令</span><br></pre></td></tr></table></figure><h3 id="2-初始化-Hexo"><a href="#2-初始化-Hexo" class="headerlink" title="2. 初始化 Hexo"></a>2. 初始化 Hexo</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">hexo</span> <span class="selector-tag">init</span> <span class="selector-tag">blog</span># 初始化创建，会再桌面创建<span class="selector-tag">blog</span>文件夹</span><br><span class="line"><span class="selector-tag">cd</span> <span class="selector-tag">blog</span># 进入<span class="selector-tag">blog</span>目录</span><br><span class="line"><span class="selector-tag">npm</span> <span class="selector-tag">install</span># 进一步安装<span class="selector-tag">hexo</span>所需文件</span><br></pre></td></tr></table></figure><p>初始化后，文件夹的目录如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="selector-class">.deploy</span>       #需要部署的文件</span><br><span class="line">├── <span class="selector-tag">node_modules</span>  <span class="selector-id">#Hexo</span>插件</span><br><span class="line">├── <span class="selector-tag">public</span>        #生成的静态网页文件</span><br><span class="line">├── <span class="selector-tag">scaffolds</span>     #模板</span><br><span class="line">├── <span class="selector-tag">source</span>        #博客正文和其他源文件等都应该放在这里</span><br><span class="line">|   ├── _drafts   #草稿</span><br><span class="line">|   └── _posts    #文章</span><br><span class="line">├── <span class="selector-tag">themes</span>        #主题</span><br><span class="line">├── _<span class="selector-tag">config</span><span class="selector-class">.yml</span>   #全局配置文件</span><br><span class="line">└── <span class="selector-tag">package</span><span class="selector-class">.json</span></span><br></pre></td></tr></table></figure><h3 id="3-启动-Hexo"><a href="#3-启动-Hexo" class="headerlink" title="3. 启动 Hexo"></a>3. 启动 Hexo</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean# 清除所有记录 /hexo c</span><br><span class="line">hexo generate# 生成静态网页 /hexo g</span><br><span class="line">hexo server   # 启动服务 /hexo s</span><br></pre></td></tr></table></figure><p>显示如下图，则运行成功。</p><p><img src="https://imgkr.cn-bj.ufileos.com/886a853c-7c50-4b12-9e7c-06682c09a122.png" alt=""></p><p>然后使用浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p><img src="https://imgkr.cn-bj.ufileos.com/f49507b3-2d19-4472-beb6-7cb8754f0443.png" alt=""></p><p>其实，如果你要求不高，我们再把它部署到码云（gitee）上，现在也可以说是完成了。</p><h3 id="4-把博客部署到码云上"><a href="#4-把博客部署到码云上" class="headerlink" title="4. 把博客部署到码云上"></a>4. 把博客部署到码云上</h3><blockquote><p>首先说明一下，为什么选择码云，因为我也是通过 GitHub Page 实现的，不过最近 GitHub 经常性蹦，访问也比较慢，所以我就选择了码云实现一下，<strong>当然你有服务器就最好不过了</strong>。</p></blockquote><p>码云（gitee）：<strong><a href="https://gitee.com/" target="_blank" rel="noopener">https://gitee.com/</a></strong></p><h4 id="4-1-注册码云，创建仓库"><a href="#4-1-注册码云，创建仓库" class="headerlink" title="4.1 注册码云，创建仓库"></a>4.1 注册码云，创建仓库</h4><p>我们需要在 gitee 创建自己的账户（<strong>如果没有</strong>），然后再创建一个自己仓库</p><p><img src="https://imgkr.cn-bj.ufileos.com/af2cef0a-0b91-46f6-9c2a-4683a18b4032.png" alt=""></p><p>输入仓库名称，其它默认即可，<strong>这里因为我已经创建了</strong>。<br><img src="https://imgkr.cn-bj.ufileos.com/6e66ab5a-1c91-4a50-b693-83b7b6e5526e.png" alt=""></p><h4 id="4-2-生成-添加-SSH-公钥"><a href="#4-2-生成-添加-SSH-公钥" class="headerlink" title="4.2 生成/添加 SSH 公钥"></a>4.2 生成/添加 SSH 公钥</h4><p>码云 Gitee 、GitHub 提供了基于 SSH 协议的 Git 服务，在使用 SSH 协议访问仓库仓库之前，需要先配置好账户/仓库的 SSH 公钥。</p><p><strong>配置 ssh 账户和邮箱</strong></p><p>邮箱不必与 GitHub、Gitee 账号相同，个人邮箱即可。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">git</span> <span class="selector-tag">config</span> <span class="selector-tag">--global</span> <span class="selector-tag">user</span><span class="selector-class">.email</span> *********<span class="keyword">@qq</span>.com# 设置邮箱</span><br><span class="line">git config --global user.name <span class="string">'****'</span># 设置用户名</span><br></pre></td></tr></table></figure><p>查看账户和邮箱</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">git</span> <span class="selector-tag">config</span> <span class="selector-tag">--global</span> <span class="selector-tag">user</span><span class="selector-class">.name</span> </span><br><span class="line"><span class="selector-tag">git</span> <span class="selector-tag">config</span> <span class="selector-tag">--global</span> <span class="selector-tag">user</span><span class="selector-class">.email</span></span><br></pre></td></tr></table></figure><p><strong>本地生成ssh公钥</strong></p><p>邮箱为刚配置好的账户邮箱</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh-keygen</span> <span class="selector-tag">-t</span> <span class="selector-tag">rsa</span> <span class="selector-tag">-C</span> "<span class="selector-tag">xxxxx</span><span class="keyword">@xxxxx</span>.com"</span><br></pre></td></tr></table></figure><p>按照提示完成三次回车，即可生成 ssh key</p><p><img src="https://imgkr.cn-bj.ufileos.com/8c530f13-9af5-449b-9e9e-6cc750261f37.png" alt=""></p><p><strong>查看 ssh 公钥</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line"># 退出</span><br><span class="line"><span class="selector-pseudo">:qa</span>!</span><br></pre></td></tr></table></figure><p>复制公钥去 Gitee 粘贴，添加<br><img src="https://imgkr.cn-bj.ufileos.com/4216e7a6-6100-4638-a63c-64c917d0c444.png" alt=""></p><blockquote><p>说明一下：</p><ul><li><strong>GitHub、gitlab、码云三个平台可以使用一个公钥</strong></li></ul></blockquote><p><strong>测试是否连接成功</strong></p><p>码云 Gitee</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh</span> <span class="selector-tag">-T</span> <span class="selector-tag">git</span><span class="keyword">@gitee</span>.com</span><br></pre></td></tr></table></figure><p>如下图所示，则表示连接成功<br><img src="https://imgkr.cn-bj.ufileos.com/8e671f4b-01b2-457e-89f4-3be91ffbad34.png" alt=""></p><p><strong>另外， GitHub 的测试代码如下:</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh</span> <span class="selector-tag">-T</span> <span class="selector-tag">git</span><span class="keyword">@github</span>.com</span><br><span class="line">  </span><br><span class="line"># 表示连接成功</span><br><span class="line">Hi “您的用户名”! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><h4 id="4-3-配置连接-Gitee"><a href="#4-3-配置连接-Gitee" class="headerlink" title="4.3 配置连接 Gitee"></a>4.3 配置连接 Gitee</h4><p>进入到我们新创建的仓库，复制项目地址</p><p><img src="https://imgkr.cn-bj.ufileos.com/58184ecf-7b9b-4c60-8582-69563e653e05.png" alt=""></p><p>复制 URL ，到 hexo 的配置文件 <code>_config.yml</code>，相应位置修改成如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">deploy</span>:</span><br><span class="line">  <span class="selector-tag">type</span>: <span class="selector-tag">git</span>                   # <span class="selector-tag">type</span>为<span class="selector-tag">git</span></span><br><span class="line">  repo: git@gitee.com:XXXXXX/blog.git # 仓库的 URL</span><br><span class="line">  <span class="selector-tag">branch</span>: <span class="selector-tag">master</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：冒号后面一定要有空格，否则不能正确识别。</strong></p></blockquote><h4 id="4-4-部署博客"><a href="#4-4-部署博客" class="headerlink" title="4.4 部署博客"></a>4.4 部署博客</h4><p>安装自动部署发布工具，不然部署会报错</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">npm</span> <span class="selector-tag">install</span> <span class="selector-tag">hexo-deployer-git</span> <span class="selector-tag">--save</span></span><br></pre></td></tr></table></figure><p>新建 deployer.sh 文件，输入代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">hexo</span> <span class="selector-tag">clean</span></span><br><span class="line"><span class="selector-tag">hexo</span> <span class="selector-tag">g</span> </span><br><span class="line"><span class="selector-tag">hexo</span> <span class="selector-tag">d</span></span><br></pre></td></tr></table></figure><p>一键部署博客</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sh</span> <span class="selector-tag">deployer</span><span class="selector-class">.sh</span></span><br></pre></td></tr></table></figure><h3 id="5-Gitee-Pages-设置"><a href="#5-Gitee-Pages-设置" class="headerlink" title="5. Gitee Pages 设置"></a>5. Gitee Pages 设置</h3><p>在项目的服务中选择 Pages 选项</p><p><img src="https://imgkr.cn-bj.ufileos.com/5944ddc0-3c68-4d5d-86dc-da3d29b4cbb6.png" alt=""></p><p>默认配置，点击启动即可</p><p><img src="https://imgkr.cn-bj.ufileos.com/d983ed3a-f2e9-4207-8cc6-39ab5564282c.png" alt=""></p><p>下图则成功开启，记住博客地址，之后可以点更新进行操作</p><p><img src="https://imgkr.cn-bj.ufileos.com/1c1b49ba-5d4b-46aa-8835-5cff8091c120.png" alt=""></p><p><strong>博客发布成功之后，可以访问博客地址：xxxxxx，就可通过他提供的博客地址进行访问，预览在线博客啦！！</strong></p><p>如果博客的样式不对，则需要在_config.yml中配置下博客地址和路径：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">url</span>: “码云提供给您的博客地址”</span><br><span class="line">root: /</span><br></pre></td></tr></table></figure><p>再执行命令 <code>sh deployer.sh</code> 就可以啦，之后就是美化我们的博客了。</p><h3 id="6-主题配置"><a href="#6-主题配置" class="headerlink" title="6. 主题配置"></a>6. 主题配置</h3><p>下载自己喜欢的主题，可以去 github 下载压缩包然后<strong>放到博客项目根目录下的 themes 中</strong>。</p><p>然后配置 <strong>_config.yml</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">theme</span>: “您的主题文件夹完整名称”</span><br><span class="line"># 这里需要注意:后面要有一个空格，名称要和<span class="selector-tag">theme</span>下的主题目录名称相同。</span><br></pre></td></tr></table></figure><p>修改完成，本地运行 <code>hexo s</code> 测试成功即可上传部署到 Gitee 然后点击更新即可。</p><h3 id="7-自定义域名"><a href="#7-自定义域名" class="headerlink" title="7. 自定义域名"></a>7. 自定义域名</h3><p>经过上面操作，我们用 Hexo 搭建好自己的 Blog 后，我选择了托管在码云上,现在通过 <a href="https://xx0817.gitee.io/blog">https://xx0817.gitee.io/blog</a> 这个地址就可以访问了。但是我想通过自己的域名进行访问，要实现这个功能。</p><h4 id="7-1-购买域名"><a href="#7-1-购买域名" class="headerlink" title="7.1 购买域名"></a>7.1 购买域名</h4><p>这里不多说，某里云、某讯云、某为云都可以，看自己喜欢。</p><h4 id="7-2-域名解析"><a href="#7-2-域名解析" class="headerlink" title="7.2 域名解析"></a>7.2 域名解析</h4><p>我们需要通过 GitHub 网址 ping 出服务器的 IP 地址。可以在本地 cmd 中 ping。也可以在网站上 ping。</p><p>我选择网站 ping。</p><p>网站：<strong><a href="http://ip.tool.chinaz.com/" target="_blank" rel="noopener">http://ip.tool.chinaz.com/</a></strong></p><p>访问后输入自己的 GitHub 部署的博客网址就能 ping 出来了。</p><p><img src="https://imgkr.cn-bj.ufileos.com/64102110-6c58-442b-b84f-31f6049cc755.png" alt=""></p><p>进入域名购买的控制台，在解析中添加记录：</p><p><img src="https://imgkr.cn-bj.ufileos.com/3fac4c75-c146-4258-8080-02856321ff7d.png" alt=""></p><p>添加记录：</p><p>主机记录为@，记录类型为A，解析线路选择默认，记录值设置为上面ping出来的IP地址。最少要设置一个，我是四个全部设置了。</p><p><img src="https://imgkr.cn-bj.ufileos.com/9f0ab269-17ce-4c40-afc2-4bfca90cf410.png" alt=""></p><p>再添加记录：</p><p>主机记录为www，记录类型为 CNAME，解析线路选择默认，记录值为你的 GitHub 域名，我的为 gdfuturexx.github.io。</p><p><img src="https://imgkr.cn-bj.ufileos.com/a0a33911-a735-4fbd-8a2f-8a3bdbb05321.png" alt=""></p><p>上面设置的意思为：</p><ul><li>设置 A 记录的意思是，当我输入 hongxin.online 这个域名的时候，访问的是 185.199.110.153等这4个IP地址其中一个；</li><li>设置 CNAME 的意思是，当我访问 gdfuturexx.github.io 这个地址的时候，会跳转到 hongxin.online，之后的过程就和 A 记录相同了，即访问 185.199.110.153等4个IP地址其中一个。</li></ul><h4 id="7-3-添加CNAME文件"><a href="#7-3-添加CNAME文件" class="headerlink" title="7.3 添加CNAME文件"></a>7.3 添加CNAME文件</h4><p>在Hexo本地文件夹的source文件夹中，增加一个名为CNAME的无后缀文件。</p><p>如果你想地址栏中显示www就输入<a href="http://www.xxx.com，否则输入xxxx.com（你的域名）就行。" target="_blank" rel="noopener">www.xxx.com，否则输入xxxx.com（你的域名）就行。</a></p><p>之后重新部署即可。</p><h4 id="7-4-GitHub-Pages-绑定域名"><a href="#7-4-GitHub-Pages-绑定域名" class="headerlink" title="7.4 GitHub Pages 绑定域名"></a>7.4 GitHub Pages 绑定域名</h4><p>登录你的GitHub，进入仓库，打开设置。</p><p>找到下图位置，在 Custom domain 添加你的自定义域名。</p><p>之后刷新一下页面，如果 能勾选Enforce HTTPS就要勾选上。如果不勾选的话访问域名会显示不安全。</p><p><img src="https://imgkr.cn-bj.ufileos.com/cfe512a5-d535-422b-af76-addb6701a3e5.png" alt=""></p><blockquote><p>自定义域名这段参考了：<strong>sushan102.top</strong>，这个网站中的文章</p></blockquote><h2 id="严格声明"><a href="#严格声明" class="headerlink" title="严格声明"></a>严格声明</h2><ul><li><p><strong>本项目涉及的代码及一系列分析过程，仅用于学习交流，切勿用于任何非法用途，后果自当。</strong></p></li><li><p><strong>未经本人同意，禁止以任何形式，在任何渠道，私自转发或盗文</strong></p></li></ul><hr><p><strong><span style="color:#35b378;font-weight:bold;">若你是无耻之人，也请带上小弟的文章出处链接地址，抱拳抱拳！！！</span></strong></p><blockquote><p><strong>若要转载请注明出处，尊重他人劳动成果。</strong></p></blockquote><p><strong><span style="color:orangered;font-weight:bold;">转载请注明出处链接 </span>: <span style="color:#0e88eb;font-weight:bold;"><a href="https://hongxin.online" target="_blank" rel="noopener">https://hongxin.online</a></span></strong></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
